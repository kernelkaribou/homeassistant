name: Build and Publish Dozzle Addon

on:
  schedule:
    # Check for updates daily at 02:00 UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
  push:
    branches:
      - dozzle
    paths:
      - 'dozzle/**'
      - '.github/workflows/dozzle.yml'

permissions:
  contents: write
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/addon-dozzle

jobs:
  check-version:
    runs-on: ubuntu-latest
    # Only run on dozzle branch or manual trigger
    if: github.ref == 'refs/heads/dozzle' || github.event_name == 'workflow_dispatch'
    outputs:
      should-build: ${{ steps.version-check.outputs.should-build }}
      dozzle-version: ${{ steps.version-check.outputs.dozzle-version }}
      addon-version: ${{ steps.version-check.outputs.addon-version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: dozzle

      - name: Check Dozzle version
        id: version-check
        run: |
          # Get latest Dozzle release
          DOZZLE_VERSION=$(curl -s https://api.github.com/repos/amir20/dozzle/releases/latest | jq -r '.tag_name' | sed 's/^v//')
          echo "Latest Dozzle version: $DOZZLE_VERSION"
          
          # Get current addon version from config.yaml
          CURRENT_VERSION=$(grep '^version:' dozzle/config.yaml | cut -d'"' -f2 | tr -d ' ')
          echo "Current addon version: $CURRENT_VERSION"
          
          # Set outputs
          echo "dozzle-version=$DOZZLE_VERSION" >> $GITHUB_OUTPUT
          echo "addon-version=$DOZZLE_VERSION" >> $GITHUB_OUTPUT
          
          # Check if we need to build (version changed or manual trigger)
          if [ "$DOZZLE_VERSION" != "$CURRENT_VERSION" ] || [ "${{ github.event_name }}" = "workflow_dispatch" ] || [ "${{ github.event_name }}" = "push" ]; then
            echo "should-build=true" >> $GITHUB_OUTPUT
            echo "Version update needed or manual trigger"
          else
            echo "should-build=false" >> $GITHUB_OUTPUT
            echo "No version update needed"
          fi

  build:
    needs: check-version
    if: needs.check-version.outputs.should-build == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        arch: [aarch64, amd64, armv7]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: dozzle

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Update addon version
        run: |
          sed -i 's/^version:.*/version: "${{ needs.check-version.outputs.addon-version }}"/' dozzle/config.yaml
          sed -i 's/^version:.*/version: "${{ needs.check-version.outputs.addon-version }}"/' dozzle/build.yaml

      - name: Log current versions
        run: |
          echo "Building Dozzle addon with:"
          echo "  Config version: $(grep '^version:' dozzle/config.yaml | cut -d':' -f2 | tr -d ' \"')"
          echo "  Build version: $(grep '^version:' dozzle/build.yaml | cut -d':' -f2 | tr -d ' \"')"
          echo "  Target Dozzle version: v${{ needs.check-version.outputs.dozzle-version }}"

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            suffix=-${{ matrix.arch }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ needs.check-version.outputs.addon-version }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./dozzle
          platforms: linux/${{ matrix.arch == 'armv7' && 'arm/v7' || matrix.arch == 'aarch64' && 'arm64' || matrix.arch }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_FROM=ghcr.io/hassio-addons/base:18.1.3
            BUILD_ARCH=${{ matrix.arch }}
            BUILD_VERSION=${{ needs.check-version.outputs.addon-version }}
            DOZZLE_VERSION=v${{ needs.check-version.outputs.dozzle-version }}

  commit-version:
    needs: [check-version, build]
    if: needs.check-version.outputs.should-build == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: dozzle
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create or switch to dozzle branch
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Check if dozzle branch exists locally
          if git show-ref --verify --quiet refs/heads/dozzle; then
            echo "Dozzle branch exists locally, switching to it"
            git checkout dozzle
          elif git show-ref --verify --quiet refs/remotes/origin/dozzle; then
            echo "Dozzle branch exists remotely, checking it out"
            git checkout -b dozzle origin/dozzle
          else
            echo "Creating new dozzle branch from main"
            git checkout -b dozzle
          fi

          # Merge latest changes from dozzle
          git merge dozzle --no-edit || echo "No changes to merge or conflicts resolved"

      - name: Update addon version
        run: |
          sed -i 's/^version:.*/version: "${{ needs.check-version.outputs.addon-version }}"/' dozzle/config.yaml
          sed -i 's/^version:.*/version: "${{ needs.check-version.outputs.addon-version }}"/' dozzle/build.yaml

      - name: Commit and push version update
        run: |
          git add dozzle/config.yaml dozzle/build.yaml
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update Dozzle addon to version ${{ needs.check-version.outputs.addon-version }}"
            git push origin dozzle
            echo "Version update committed and pushed to dozzle branch"
          fi

  cleanup-packages:
    needs: [check-version, build]
    if: needs.check-version.outputs.should-build == 'true'
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Cleanup old container versions
        run: |
          echo "Package cleanup will run after a few successful builds to avoid errors on first runs"
          echo "Current build completed successfully - packages are available in the repository"